- name: Deploy WordPress and DB in Docker
  hosts: localhost
  become: true
  vars_files:
    - .vars.yaml
  tasks:

    - name: Create Docker network for proxy
      docker_network:
        name: nginx-proxy
        state: present

    - name: Start nginx-proxy container
      docker_container:
        name: nginx-proxy
        image: jwilder/nginx-proxy
        ports:
          - "80:80"
          - "443:443"
        volumes:
          - /var/run/docker.sock:/tmp/docker.sock:ro
          - /etc/nginx/certs:/etc/nginx/certs:ro
          - /etc/nginx/vhost.d:/etc/nginx/vhost.d
          - /usr/share/nginx/html:/usr/share/nginx/html
        networks:
          - name: nginx-proxy
        restart_policy: always
        state: started

    - name: Start Let's Encrypt companion
      docker_container:
        name: nginx-proxy-le
        image: jrcs/letsencrypt-nginx-proxy-companion
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock:ro
          - /etc/nginx/certs:/etc/nginx/certs
          - /etc/nginx/vhost.d:/etc/nginx/vhost.d
          - /usr/share/nginx/html:/usr/share/nginx/html
        networks:
          - name: nginx-proxy
        restart_policy: always
        state: started
        env:
          NGINX_PROXY_CONTAINER: nginx-proxy
          DEFAULT_EMAIL: "{{ tls_owner_email }}"

    - name: Start MySQL container
      docker_container:
        name: wp_db
        image: mysql:latest
        env:
          MYSQL_DATABASE: "{{ wordpress_db_name }}"
          MYSQL_USER: "{{ db_user }}"
          MYSQL_PASSWORD: "{{ db_pass }}"
          MYSQL_ROOT_PASSWORD: "{{ db_root_pass }}"
        networks:
          - name: nginx-proxy
        state: started
        restart_policy: always

    - name: Start WordPress container
      docker_container:
        name: wordpress
        image: wordpress:latest
        env:
          WORDPRESS_DB_HOST: wp_db:3306
          WORDPRESS_DB_NAME: "{{ wordpress_db_name }}"
          WORDPRESS_DB_USER: "{{ db_user }}"
          WORDPRESS_DB_PASSWORD: "{{ db_pass }}"
          VIRTUAL_HOST: "{{ domain_name }}"
          LETSENCRYPT_HOST: "{{ domain_name }}"
          LETSENCRYPT_EMAIL: "{{ tls_owner_email }}"
        networks:
          - name: nginx-proxy
        restart_policy: always
        state: started
